@import "../common/var.scss";

@mixin button-variant ($backgroundColor, $borderColor, $fontColor) {
  color: $fontColor;
  background-color: $backgroundColor;
  border-color: $borderColor;

  &:hover {
    background-color: mix($--color-white, $backgroundColor, $--button-hover-tint-percent);
    border-color: mix($--color-white, $borderColor, $--button-hover-tint-percent);
    color: $fontColor;
  }

  &:active {
    background-color: mix($--color-black, $backgroundColor, $--button-active-shade-percent);
    border-color: mix($--color-black, $borderColor, $--button-active-shade-percent);
    color: $fontColor;
  }

  &.is-plain {//此处为交集选择器,针对朴素风格同时明确按钮类型的按钮进行下方的样式覆盖设计--因为plain一定会随着type一起传递故设置交集选择器即可
    @include button-plain($backgroundColor);
  }

  &.is-disabled {//和上方同理--针对无is-plain而有type的disabled按钮情况的样式设计,cursor:not-allowed在button.scss中提前设置过了
    background-color: mix($--color-white, $backgroundColor);
    border-color: mix($--color-white, $backgroundColor);
    color: $--color-white;
  }
}

@mixin button-plain ($color) {
  background-color: mix($--color-white, $color, 90%);
  border-color: mix($--color-white, $color, 60%);
  color: $color;

  &:hover {
    background-color: $color;
    border-color: $color;
    color: $--color-white;
  }

  &:active {
    background-color: mix($--color-black, $color, $--button-active-shade-percent);
    border-color: mix($--color-black, $color, $--button-active-shade-percent);
    color: $--color-white;
  }

  &.is-disabled {//此处为三层嵌套关系--在按钮类型确定的情况下选上了风格此时又选中了disabled类型的三层交集结构
    background-color: mix($--color-white, $color, 90%);
    border-color: mix($--color-white, $color, 80%);
    color: mix($--color-white, $color, 40%);
  }
}

@mixin button-size ($padding-vertical, $padding-horizontal, $font-size, $border-radius) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  border-radius: $border-radius;

  &.is-round {
    padding: $padding-vertical $padding-horizontal;
  }

  &.is-circle {
    padding: $padding-vertical;
  }
}